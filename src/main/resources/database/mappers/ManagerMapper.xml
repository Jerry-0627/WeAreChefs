<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.chef.app.manager.main.ManagerDAO">
	<!-- index 첫줄 정보 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<select id="getMemberTotalCount" resultType="java.lang.Long">
		SELECT COUNT(MEMBER_ID)
		FROM "MEMBER"
	</select>
	
	<select id="getOrderCompleteCount" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM(SELECT ORDER_NUM , ORDER_STATUS, TO_CHAR(ORDER_DATE , 'YYYY-MM-DD') AS TODAY
			FROM STOREORDER
			) ST
		WHERE ST.TODAY = TO_CHAR(SYSDATE, 'YYYY-MM-DD') AND ST.ORDER_STATUS = '결제완료'
	</select>
	
	<select id="getDeliveryCount" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM(SELECT ORDER_NUM , DELIVERY_STATUS, TO_CHAR(ORDER_DATE , 'YYYY-MM-DD') AS TODAY
			FROM STOREORDER
			) ST
		WHERE ST.TODAY = TO_CHAR(SYSDATE, 'YYYY-MM-DD') AND ST.DELIVERY_STATUS = '배송중'
	</select>	
	
	<select id="getRequiredFoodStockOrderCount" resultType="java.lang.Long">
		SELECT COUNT(FOOD_STOCK)
		FROM FOOD
		<![CDATA[
			WHERE FOOD_STOCK < 0
		]]>
	</select>
	
	<!-- index 차트 정보 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<select id="getMonthSales" resultType="TotalPurchaseDTO">
		SELECT TO_CHAR(ORDER_DATE , 'MM') PUR_PERIOD, SUM(ORDER_PRICE)  PUR_PRICE
		FROM
		    STOREORDER
		WHERE TO_CHAR(ORDER_DATE, 'YYYY') = TO_CHAR(SYSDATE, 'YYYY')
		GROUP BY
		    TO_CHAR(ORDER_DATE , 'MM')
		ORDER BY PUR_PERIOD
	</select>
	
	<!-- index 멤버 정보 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<select id="getMemberListAsc" resultType="MemberDTO">
		SELECT MM.*
		FROM 
			(SELECT ROWNUM, M.*
			FROM (SELECT * FROM "MEMBER") M
			ORDER BY ROWNUM ASC) MM
	</select>
	
	<select id="getMemberListDesc" resultType="MemberDTO">
		SELECT MM.*
		FROM 
			(SELECT ROWNUM, M.*
			FROM (SELECT * FROM "MEMBER") M
			ORDER BY ROWNUM DESC) MM
	</select>
	
	<!-- index 주문 정보 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<select id="getOrderListDesc" resultType="StoreOrderDTO">
		SELECT *
		FROM STOREORDER 
		WHERE ORDER_STATUS = '결제완료'
		ORDER BY ORDER_DATE DESC
	</select>
	
	<!-- managerDetail member 정보ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<select id="getMemberDetail" parameterType="MemberDTO" resultType="MemberDTO">
		SELECT *
		FROM "MEMBER"
		WHERE MEMBER_ID = #{member_id}
	</select>
	
	<!-- 수정 확인 시 실행되는 Update 쿼리 -->
	<update id="postMemberDetailUpdate" parameterType="OriMemberDTO">
		UPDATE "MEMBER"
		SET
			MEMBER_ID = #{member_id},
			MEMBER_NICKNAME = #{member_nickname},
			MEMBER_NAME = #{member_name},
			MEMBER_MAIL = #{member_mail},
			MEMBER_PHONE = #{member_phone},
			MEMBER_LEV = #{member_lev}
		WHERE MEMBER_ID = #{oriMember_id}
	</update>
	
	<!-- Member Detail 수정 시 중복을 확인하는 쿼리 목록 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<!-- MemberId -->
	<select id="confirmMemberId" parameterType="MemberDTO" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM "MEMBER"
		WHERE MEMBER_ID = #{member_id} 
	</select>
	<!-- MemberNickname -->
	<select id="confirmMemberNickname" parameterType="MemberDTO" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM "MEMBER"
		WHERE MEMBER_NICKNAME = #{member_nickname} 
	</select>
	<!-- Mail -->
	<select id="confirmMemberMail" parameterType="MemberDTO" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM "MEMBER"
		WHERE MEMBER_Mail = #{member_mail} 
	</select>
	<!-- Phone -->
	<select id="confirmMemberPhone" parameterType="MemberDTO" resultType="java.lang.Long">
		SELECT COUNT(*)
		FROM "MEMBER"
		WHERE MEMBER_PHONE = #{member_phone} 
	</select>
	
	<!-- Orderㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
	<!-- order List 결제 목록 -->
	<select id="getOrderList" resultType="StoreOrderDTO">
		SELECT *
		FROM STOREORDER
	</select>
	<!-- cancel order List 결제 취소 목록 -->
	<select id="getCancelOrderList" resultType="StoreOrderDTO">
		SELECT *
		FROM STOREORDER
		WHERE ORDER_STATUS = '결제취소요청'
	</select>
	<!-- 결제취소 요청 승인 -->
	<update id="cancelOk" parameterType="StoreOrderDTO">
		UPDATE STOREORDER
		SET
			ORDER_STATUS = '결제취소'
		WHERE ORDER_NUM = #{order_num}
	</update>
	<!-- 결제취소 요청 거절 -->
	<update id="cancelNo" parameterType="StoreOrderDTO">
		UPDATE STOREORDER
		SET
			ORDER_STATUS = '결제취소거절'
		WHERE ORDER_NUM = #{order_num}
	</update>	
</mapper>